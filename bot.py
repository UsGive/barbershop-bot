from telegram import Update, ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters, ConversationHandler, CallbackQueryHandler
import os
from dotenv import load_dotenv

load_dotenv()
BOT_TOKEN = os.getenv("BOT_TOKEN")

CHOOSING_BARBER, TYPING_NAME, TYPING_PHONE, CHOOSING_DATE, CHOOSING_TIME = range(5)

MAIN_MENU = [
    [KeyboardButton("üíà –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Å—Ç—Ä–∏–∂–∫—É")],
    [KeyboardButton("üßî –ù–∞—à–∏ –±–∞—Ä–±–µ—Ä—ã")],
    [KeyboardButton("üíº –£—Å–ª—É–≥–∏ –∏ —Ü–µ–Ω—ã")],
    [KeyboardButton("üìç –ê–¥—Ä–µ—Å –∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã")]
]

BARBERS = {
    "–ò—Ä–∞": {
        "photo": "photos/ira.jpg",
        "profile": "‚úÇÔ∏è –ò—Ä–∞ ‚Äî —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–º –º—É–∂—Å–∫–∏–º –∏ –∂–µ–Ω—Å–∫–∏–º —Å—Ç—Ä–∏–∂–∫–∞–º. 5 –ª–µ—Ç –æ–ø—ã—Ç–∞, –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–∞—è –∫ –¥–µ—Ç–∞–ª—è–º –∏ –≤–µ–∂–ª–∏–≤–∞—è.",
        "video": "videos/ira.mp4"
    },
    "–ê–º–∞–Ω": {
        "photo": "photos/aman.jpg",
        "profile": "üíà –ê–º–∞–Ω ‚Äî –º–∞—Å—Ç–µ—Ä —Ñ–µ–π–¥–æ–≤ –∏ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —É–∫–ª–∞–¥–æ–∫. 4 –≥–æ–¥–∞ –≤ –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏, —Å—Ç–∏–ª—å–Ω—ã–π –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π.",
        "video": "videos/aman.mp4"
    },
    "–û–ª–µ–≥": {
        "photo": "photos/oleg.jpg",
        "profile": "üßî –û–ª–µ–≥ ‚Äî —ç–∫—Å–ø–µ—Ä—Ç –ø–æ —É—Ö–æ–¥—É –∑–∞ –±–æ—Ä–æ–¥–æ–π –∏ –∫–æ—Ä–æ—Ç–∫–∏–º —Å—Ç—Ä–∏–∂–∫–∞–º. –ë–æ–ª–µ–µ 6 –ª–µ—Ç –æ–ø—ã—Ç–∞. –†–∞–±–æ—Ç–∞–µ—Ç –±—ã—Å—Ç—Ä–æ –∏ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ.",
        "video": "videos/oleg.mp4"
    }
}

user_state = {}

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    user_state[user_id] = {"booking": None}
    await update.message.reply_text(
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ BarberBot üíà",
        reply_markup=ReplyKeyboardMarkup(MAIN_MENU, resize_keyboard=True)
    )

async def handle_menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text
    user_id = update.effective_user.id

    if text == "üíà –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Å—Ç—Ä–∏–∂–∫—É":
        user_state[user_id] = {"step": "choose_barber"}
        keyboard = [[KeyboardButton(name)] for name in BARBERS.keys()]
        await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –±–∞—Ä–±–µ—Ä–∞:", reply_markup=ReplyKeyboardMarkup(keyboard, resize_keyboard=True))

    elif text in BARBERS and user_state.get(user_id, {}).get("step") == "choose_barber":
        user_state[user_id]["barber"] = text
        user_state[user_id]["step"] = "type_name"
        await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è:")

    elif user_state.get(user_id, {}).get("step") == "type_name":
        user_state[user_id]["name"] = text
        user_state[user_id]["step"] = "choose_date"
        await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –∑–∞–ø–∏—Å–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 15 –∞–ø—Ä–µ–ª—è):")

    elif user_state.get(user_id, {}).get("step") == "choose_date":
        user_state[user_id]["date"] = text
        user_state[user_id]["step"] = "choose_time"
        await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è:", reply_markup=ReplyKeyboardMarkup([[t] for t in ["10:00", "11:00", "12:00", "13:00", "14:00"]], resize_keyboard=True))

    elif user_state.get(user_id, {}).get("step") == "choose_time":
        user_state[user_id]["time"] = text
        user_state[user_id]["step"] = "type_phone"
        await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (–≤ —Ñ–æ—Ä–º–∞—Ç–µ 555 78 22 33):")

    elif user_state.get(user_id, {}).get("step") == "type_phone":
        user_state[user_id]["phone"] = text
        d = user_state[user_id]
        await update.message.reply_text(
            f"‚úÖ –ó–∞–ø–∏—Å—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞!\n–ë–∞—Ä–±–µ—Ä: {d['barber']}\n–ò–º—è: {d['name']}\n–î–∞—Ç–∞: {d['date']}\n–í—Ä–µ–º—è: {d['time']}\n–¢–µ–ª–µ—Ñ–æ–Ω: {d['phone']}\n\n–î–æ –≤—Å—Ç—Ä–µ—á–∏! üíà",
            reply_markup=ReplyKeyboardMarkup(MAIN_MENU, resize_keyboard=True)
        )
        user_state[user_id] = {}

    elif text == "üßî –ù–∞—à–∏ –±–∞—Ä–±–µ—Ä—ã":
        keyboard = [[InlineKeyboardButton(name, callback_data=name)] for name in BARBERS.keys()]
        await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –±–∞—Ä–±–µ—Ä–∞:", reply_markup=InlineKeyboardMarkup(keyboard))

    elif text == "üíº –£—Å–ª—É–≥–∏ –∏ —Ü–µ–Ω—ã":
        await update.message.reply_text("üíá –°—Ç—Ä–∏–∂–∫–∞ ‚Äì 700\nüßî –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –±–æ—Ä–æ–¥—ã ‚Äì 500\nüíÜ –ü–æ–ª–Ω—ã–π –∫–æ–º–ø–ª–µ–∫—Å ‚Äì 1100")

    elif text == "üìç –ê–¥—Ä–µ—Å –∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã":
        await update.message.reply_text("üìç —É–ª. –ë–∞—Ä–±–µ—Ä—Å–∫–∞—è, 123\nüìû +996 (555) 23-45-67\nüïí –†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã: 10:00 ‚Äì 20:00")

    else:
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç –∏–∑ –º–µ–Ω—é.")

async def show_barber_profile(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    barber_name = query.data
    barber = BARBERS.get(barber_name)
    if barber:
        with open(barber['photo'], "rb") as photo:
            await query.message.reply_photo(photo=photo)
        await query.message.reply_text(barber['profile'])
        with open(barber['video'], "rb") as vid:
            await query.message.reply_video(video=vid)
        await query.message.reply_text("–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=ReplyKeyboardMarkup(MAIN_MENU, resize_keyboard=True))

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞

def main():
    app = ApplicationBuilder().token(BOT_TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CallbackQueryHandler(show_barber_profile))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_menu))
    app.run_polling()

if __name__ == "__main__":
    main()

